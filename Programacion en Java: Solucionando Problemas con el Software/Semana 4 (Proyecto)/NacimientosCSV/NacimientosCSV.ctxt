#BlueJ class context
comment0.params=csvArchivo
comment0.target=void\ nacimientosTotales(org.apache.commons.csv.CSVParser)
comment0.text=\n\ Mostrar\ el\ n\u00FAmero\ de\ nacimientos\ totales,\ total\ de\ ni\u00F1os,\ ni\u00F1as\ y\ n\u00FAmero\ distinto\ de\ nombres\ \n\ de\ ni\u00F1os\ y\ ni\u00F1as\ (totalBirths)\n\ \n\ @param\ csvArchivo\ Objeto\ CSVParser\ con\ todos\ los\ nacimientos\ a\ comprobar\n
comment1.params=csvNacimientos\ genero
comment1.target=java.util.ArrayList\ getClasificacion(org.apache.commons.csv.CSVParser,\ java.lang.String)
comment1.text=\n\ Obtener\ la\ clasificaci\u00F3n\ de\ nombres\ seg\u00FAn\ el\ n\u00FAmero\ de\ nacimientos\ y\ en\ un\ determinado\ g\u00E9nero.\n\ Si\ un\ nombre\ aparece\ en\ varias\ entradas\ distintas\ dentro\ del\ mismo\ g\u00E9nero,\ el\ n\u00FAmero\ de\ \n\ nacimientos\ a\ tener\ en\ cuenta\ de\ ese\ nombre\ para\ la\ clasificaci\u00F3n\ es\ la\ suma\ de\ los\ n\u00FAmeros\ de\n\ nacimientos\ aparecidos\ para\ ese\ nombre.\n\ \n\ @param\ csvNacimientos\ Conjunto\ de\ nombres\ con\ sus\ nacimientos\ y\ g\u00E9nero.\n\ @param\ genero\ G\u00E9nero\ a\ filtrar\ del\ conjunto\ de\ nombres.\n
comment10.params=anno\ posicion\ genero
comment10.target=void\ probarGetNombre(int,\ int,\ java.lang.String)
comment10.text=\n\ Probar\ la\ funci\u00F3n\ getNombre\ (Parte\ 3\ del\ proyecto).\n\ \n\ @param\ anno\ A\u00F1o\ de\ la\ clasificaci\u00F3n.\n\ @param\ posicion\ Posici\u00F3n\ del\ nombre\ en\ la\ clasificaci\u00F3n.\n\ @param\ genero\ G\u00E9nero\ del\ nombre\ a\ obtener\ ("F"\ o\ "M").\n
comment11.params=nombre\ anno\ annoNuevo\ genero
comment11.target=void\ probarQueNombreSeriaEnAnno(java.lang.String,\ int,\ int,\ java.lang.String)
comment11.text=\n\ Probar\ la\ funci\u00F3n\ getNombrequeNombreSeriaEnAnno\ (Parte\ 4\ del\ proyecto).\n\ \n\ @param\ nombre\ Nombre\ original.\n\ @param\ anno\ A\u00F1o\ original\ en\ el\ cual\ se\ eligi\u00F3\ el\ nombre\ original.\n\ @param\ annoNuevo\ Nuevo\ a\u00F1o\ del\ que\ obtener\ el\ nuevo\ nombre\ que\ se\ elegir\u00EDa\ con\ la\ misma\ \n\ popularidad\ que\ la\ del\ nombre\ en\ el\ a\u00F1o\ original.\n\ @param\ genero\ Genero\ a\ filtrar\ los\ nombres.\n
comment12.params=nombre\ genero
comment12.target=void\ probarGetAnnoMayorPosicion(java.lang.String,\ java.lang.String)
comment12.text=\n\ Probar\ la\ funci\u00F3n\ getAnnoMayorPosicion\ (Parte\ 5\ del\ proyecto).\n\ \n\ @param\ nombre\ Nombre\ a\ obtener\ el\ a\u00F1o\ de\ su\ mejor\ clasificaci\u00F3n.\n\ @param\ genero\ Genero\ a\ filtrar\ los\ a\u00F1os.\n
comment13.params=nombre\ genero\ sinClasificar
comment13.target=void\ probarGetPosicionMedia(java.lang.String,\ java.lang.String,\ boolean)
comment13.text=\n\ Probar\ la\ funci\u00F3n\ getPosicionMedia\ (Parte\ 6\ del\ proyecto).\n\ \n\ @param\ nombre\ Nombre\ a\ obtener\ la\ clasificaci\u00F3n\ media\ en\ varios\ a\u00F1os.\n\ @param\ genero\ Genero\ a\ filtrar\ en\ las\ clasificaciones\ de\ cada\ a\u00F1o.\n\ @param\ sinClasificar\ Estado\ para\ saber\ si\ se\ tienen\ en\ cuenta\ la\ posici\u00F3n\ en\ los\ a\u00F1os\ donde\ el\ nombre\ \n\ no\ ha\ obtenido\ ninguna\ clasificaci\u00F3n.\ Si\ no\ se\ tienen\ en\ cuenta,\ la\ posici\u00F3n\ en\ esos\ a\u00F1os\ se\ ignora;\ \n\ pero\ si\ se\ tienen\ en\ cuenta\ se\ toma\ como\ posici\u00F3n\ en\ dichos\ a\u00F1os\ la\ m\u00E1xima\ posici\u00F3n\ posible\ +\ 1.\n
comment14.params=anno\ nombre\ genero\ sinClasificar
comment14.target=void\ probarGetTotalNacimientosPosicionMayor(int,\ java.lang.String,\ java.lang.String,\ boolean)
comment14.text=\n\ Probar\ la\ funci\u00F3n\ getTotalNacimientosPosicionMayor\ (Parte\ 7\ del\ proyecto).\n\ \n\ @param\ nombre\ Nombre\ a\ partir\ del\ cual\ obtener\ aquellos\ con\ posiciones\ mayores.\n\ @param\ genero\ Genero\ por\ el\ cual\ filtrar\ los\ a\u00F1os.\n\ @param\ sinClasificar\ Estado\ para\ saber\ si\ en\ el\ caso\ de\ no\ aparaci\u00F3n\ del\ nombre\ en\ la\ clasificaci\u00F3n,\n\ tener\ en\ cuenta\ el\ total\ de\ nacimientos\ de\ todos\ los\ nombres\ o\ simplemente\ devolver\ -1.\n\ @return\ Total\ de\ nacimientos\ de\ los\ nombres\ con\ clasificaci\u00F3n\ m\u00E1s\ alta\ o\ -1\ si\ el\ nombre\ no\ se\ encuentra\n\ y\ no\ se\ ha\ activado\ el\ estado\ sinClasificar.\ Si\ est\u00E1\ activado\ el\ estado\ sinClasificar\ y\ el\ nombre\ no\ \n\ se\ encuentra,\ se\ devuelve\ la\ suma\ total\ de\ nacimientos\ de\ toda\ la\ clasificaci\u00F3n\ en\ ese\ a\u00F1o\ para\ ese\n\ g\u00E9nero\ en\ concreto.\n
comment2.params=anno\ nombre\ genero
comment2.target=int\ getPosicion(int,\ java.lang.String,\ java.lang.String)
comment2.text=\n\ Obtener\ la\ posici\u00F3n\ en\ la\ clasificaci\u00F3n\ por\ n\u00FAmero\ de\ nacimientos\ de\ un\ nombre\ con\ un\ determinado\n\ g\u00E9nero\ y\ en\ un\ a\u00F1o\ en\ concreto.\n\ \n\ @param\ anno\ A\u00F1o\ en\ el\ cual\ realizar\ la\ comprobaci\u00F3n.\n\ @param\ nombre\ Nombre\ del\ nacido\ a\ obtener\ su\ clasificaci\u00F3n.\n\ @param\ genero\ G\u00E9nero\ del\ nacido\ ("F"\ o\ "M").\ \n\ @return\ Posici\u00F3n\ de\ la\ clasificaci\u00F3n\ del\ nombre\ con\ ese\ g\u00E9nero.\ 0\ si\ no\ lo\ encuentra.\n
comment3.params=anno\ posicion\ genero
comment3.target=java.lang.String\ getNombre(int,\ int,\ java.lang.String)
comment3.text=\n\ Obtener\ el\ nombre\ de\ la\ persona\ con\ una\ determinada\ posici\u00F3n\ en\ la\ clasificaci\u00F3n\ de\ nombres\ \n\ por\ n\u00FAmero\ de\ nacimientos\ en\ un\ a\u00F1o\ concreto\ y\ con\ un\ g\u00E9nero\n\ \n\ @param\ anno\ A\u00F1o\ de\ la\ clasificaci\u00F3n.\n\ @param\ posicion\ Posici\u00F3n\ del\ nombre\ en\ la\ clasificaci\u00F3n.\n\ @param\ genero\ G\u00E9nero\ del\ nombre\ a\ obtener\ ("F"\ o\ "M").\n\ @return\ Nombre\ en\ la\ posici\u00F3n\ de\ la\ clasificaci\u00F3n.\ Si\ no\ existe\ ning\u00FAn\ nombre\ en\ esa\ posici\u00F3n\n\ devuelve\ null.\n
comment4.params=nombre\ anno\ annoNuevo\ genero
comment4.target=java.lang.String\ queNombreSeriaEnAnno(java.lang.String,\ int,\ int,\ java.lang.String)
comment4.text=\n\ Obtener\ el\ nombre\ que\ se\ hubiese\ escogido\ para\ una\ persona\ en\ un\ nuevo\ a\u00F1o,\ si\ el\ nombre\ escogido\n\ en\ este\ nuevo\ a\u00F1o\ hubiese\ sido\ aquel\ con\ la\ misma\ popularidad\ (posici\u00F3n\ en\ la\ clasificaci\u00F3n)\ que\n\ la\ del\ nombre\ elegido\ en\ el\ a\u00F1o\ original.\n\ \n\ @param\ nombre\ Nombre\ original.\n\ @param\ anno\ A\u00F1o\ original\ en\ el\ cual\ se\ eligi\u00F3\ el\ nombre\ original.\n\ @param\ annoNuevo\ Nuevo\ a\u00F1o\ del\ que\ obtener\ el\ nuevo\ nombre\ que\ se\ elegir\u00EDa\ con\ la\ misma\ \n\ popularidad\ que\ la\ del\ nombre\ en\ el\ a\u00F1o\ original.\n\ @param\ genero\ Genero\ a\ filtrar\ los\ nombres.\n\ @return\ Nuevo\ nombre\ escogido\ en\ el\ nuevo\ a\u00F1o.\ Null\ si\ no\ existe\ el\ nombre\ en\ el\ a\u00F1o\ original\ o\n\ no\ hay\ ning\u00FAn\ nombre\ en\ el\ nuevo\ a\u00F1o\ con\ la\ misma\ popularidad\ que\ el\ nombre\ antiguo\ en\ el\ a\u00F1o\n\ original.\n
comment5.params=nombre\ genero
comment5.target=int\ getAnnoMayorPosicion(java.lang.String,\ java.lang.String)
comment5.text=\n\ Obtener\ el\ a\u00F1o\ de\ mejor\ posici\u00F3n\ en\ la\ clasificaci\u00F3n\ de\ un\ nombre\ por\ el\ n\u00FAmero\ de\ nacimientos.\n\ \n\ @param\ nombre\ Nombre\ a\ obtener\ el\ a\u00F1o\ de\ su\ mejor\ clasificaci\u00F3n.\n\ @param\ genero\ Genero\ a\ filtrar\ los\ a\u00F1os.\n\ @return\ A\u00F1o\ de\ la\ mejor\ clasificaci\u00F3n\ del\ nombre.\ Si\ el\ nombre\ no\ se\ encuentra\ en\ ninguno\ de\ \n\ los\ a\u00F1os\ seleccionados,\ devuelve\ -1.\n
comment6.params=nombre\ genero\ sinClasificar
comment6.target=double\ getPosicionMedia(java.lang.String,\ java.lang.String,\ boolean)
comment6.text=\n\ Obtener\ la\ posici\u00F3n\ media\ de\ clasificaci\u00F3n\ (seg\u00FAn\ el\ n\u00FAmero\ de\ nacimientos)\ de\ un\ nombre\ en\ varios\ \n\ archivos.\n\ \n\ @param\ nombre\ Nombre\ a\ obtener\ su\ clasificaci\u00F3n\ media.\n\ @param\ genero\ Genero\ a\ filtrar\ en\ los\ archivos\ a\u00F1os.\n\ @param\ sinClasificar\ Estado\ para\ saber\ si\ se\ tienen\ en\ cuenta\ los\ a\u00F1os\ donde\ el\ nombre\ no\ ha\ obtenido\n\ ninguna\ clasificaci\u00F3n.\ Si\ no\ se\ tienen\ en\ cuenta\ esos\ a\u00F1os\ se\ ignoran,\ pero\ si\ se\ tienen\ en\ cuenta\n\ se\ toma\ como\ posici\u00F3n\ en\ dichos\ a\u00F1os\ la\ m\u00E1xima\ posici\u00F3n\ posible\ +\ 1.\n\ @return\ Clasificaci\u00F3n\ (por\ n\u00FAmero\ de\ nacimientos)\ media\ del\ nombre.\ -1\ si\ el\ nombre\ no\ tiene\n\ ningun\ clasificaci\u00F3n\ en\ ning\u00FAn\ archivo\ seleccionado.\n
comment7.params=anno\ nombre\ genero\ sinClasificar
comment7.target=int\ getTotalNacimientosPosicionMayor(int,\ java.lang.String,\ java.lang.String,\ boolean)
comment7.text=\n\ Obtener\ el\ n\u00FAmero\ de\ nacimientos\ total\ de\ todos\ los\ nombres\ con\ posici\u00F3n\ m\u00E1s\ alta\ en\ la\ clasificaci\u00F3n\n\ de\ un\ a\u00F1o\ concreto\ y\ para\ un\ g\u00E9nero\ determinado.\n\ \n\ @param\ nombre\ Nombre\ a\ partir\ del\ cual\ obtener\ aquellos\ con\ posiciones\ mayores.\n\ @param\ genero\ Genero\ por\ el\ cual\ filtrar\ los\ a\u00F1os.\n\ @param\ sinClasificar\ Estado\ para\ saber\ si\ en\ el\ caso\ de\ no\ aparaci\u00F3n\ del\ nombre\ en\ la\ clasificaci\u00F3n,\n\ tener\ en\ cuenta\ el\ total\ de\ nacimientos\ de\ todos\ los\ nombres\ o\ simplemente\ devolver\ -1.\n\ @return\ Total\ de\ nacimientos\ de\ los\ nombres\ con\ clasificaci\u00F3n\ m\u00E1s\ alta\ o\ -1\ si\ el\ nombre\ no\ se\ encuentra\n\ y\ no\ se\ ha\ activado\ el\ estado\ sinClasificar.\ Si\ est\u00E1\ activado\ el\ estado\ sinClasificar\ y\ el\ nombre\ no\ \n\ se\ encuentra,\ se\ devuelve\ la\ suma\ total\ de\ nacimientos\ de\ toda\ la\ clasificaci\u00F3n\ en\ ese\ a\u00F1o\ para\ ese\n\ g\u00E9nero\ en\ concreto.\n
comment8.params=
comment8.target=void\ probarNacimientosTotales()
comment8.text=\n\ Probar\ la\ funci\u00F3n\ nacimientosTotales\ (Parte\ 1\ del\ proyecto)\n
comment9.params=anno\ nombre\ genero
comment9.target=void\ probarGetPosicion(int,\ java.lang.String,\ java.lang.String)
comment9.text=\n\ Probar\ la\ funci\u00F3n\ getPosicion\ (Parte\ 2\ del\ proyecto).\n\ \n\ @param\ anno\ A\u00F1o\ en\ el\ cual\ realizar\ la\ comprobaci\u00F3n.\n\ @param\ nombre\ Nombre\ del\ nacido\ a\ obtener\ su\ clasificaci\u00F3n.\n\ @param\ genero\ G\u00E9nero\ del\ nacido\ ("F"\ o\ "M").\ \n
numComments=15
