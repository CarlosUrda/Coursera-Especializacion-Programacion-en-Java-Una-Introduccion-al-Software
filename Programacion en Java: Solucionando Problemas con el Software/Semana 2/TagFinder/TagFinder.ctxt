#BlueJ class context
comment0.params=adn\ inicio
comment0.target=int\ indiceFinalProteina(java.lang.String,\ int)
comment0.text=\n\ M\u00E9todo\ que\ busca\ el\ final\ de\ una\ proteina\ a\ partir\ del\ \u00EDndice\ inicial\ de\ la\ prote\u00EDna\ \n\ dentro\ de\ una\ secuencia\ de\ adn.\n\ El\ cod\u00F3n\ final\ tiene\ que\ cumplir\ la\ condici\u00F3n\ de\ estar\ a\ una\ distancia\ m\u00FAltiplo\ de\ 3\ \n\ del\ inicio\ y\ debe\ ser\ el\ primer\ cod\u00F3n\ encontrado,\ es\ decir,\ que\ si\ el\ primer\ cod\u00F3n\ final\ no\ cumple\ la\ \n\ condici\u00F3n\ pero\ el\ segundo\ repetido\ s\u00ED,\ no\ se\ da\ por\ v\u00E1lido.\ Adem\u00E1s,\ de\ entre\ aquellos\ que\n\ cumplan\ las\ condiciones,\ se\ elige\ aquel\ cod\u00F3n\ final\ m\u00E1s\ cercano\ al\ cod\u00F3n\ inicial.\ \n\ \n\ @param\ inicio\ Posici\u00F3n\ inicial\ a\ partir\ de\ la\ cual\ buscar\ un\ cod\u00F3n\ final.\n\ @param\ adn\ Secuencia\ de\ adn\ en\ may\u00FAsculas\ donde\ buscar\ el\ cod\u00F3n\ final.\n\ @return\ Indice\ de\ la\ posici\u00F3n\ siguiente\ al\ final\ de\ la\ prote\u00EDna\ o\ -1\ si\ no\ se\ encuentra.\n
comment1.params=proteina
comment1.target=java.lang.String\ obtenerCodonFinal(java.lang.String)
comment1.text=\n\ Obtener\ el\ cod\u00F3n\ final\ de\ una\ prote\u00EDna.\ \n\ \n\ @param\ proteina\ Proteina\ a\ obtener\ su\ cod\u00F3n\ final.\n\ @return\ Si\ la\ secuencia\ pasada\ no\ es\ una\ prote\u00EDna\ devuelve\ "",\ sino\ devuelve\ el\ cod\u00F3n\ final.\n
comment2.params=adn
comment2.target=java.lang.String\ buscarProteina(java.lang.String)
comment2.text=\n\ Funci\u00F3n\ que\ busca\ una\ prote\u00EDna\ dentro\ de\ una\ secuencia\ de\ ADN\n\ \n\ @param\ adn\ Secuencia\ de\ adn\ a\ buscar\ la\ prote\u00EDna.\n\ @return\ String\ con\ la\ prote\u00EDna\ encontrada\ o\ ""\ en\ caso\ de\ no\ encontrarse.\n
comment3.params=adn
comment3.target=edu.duke.StorageResource\ buscarProteinas(java.lang.String)
comment3.text=\n\ Funci\u00F3n\ que\ busca\ todas\ las\ prote\u00EDnas\ dentro\ de\ una\ secuencia\ de\ ADN\n\ \n\ @param\ adn\ Secuencia\ de\ adn\ a\ buscar\ las\ prote\u00EDnas.\n\ @return\ Almacenamiento\ con\ todas\ las\ prote\u00EDnas\ encontradas\n
comment4.params=adn
comment4.target=double\ cgProporcion(java.lang.String)
comment4.text=\n\ Obtener\ la\ proporcion\ de\ C's\ y\ G's\ en\ una\ secuencia\ de\ ADN.\n\ \n\ @param\ adn\ Secuencia\ de\ adn\ a\ realizar\ la\ comprobaci\u00F3n.\n\ @return\ Fracci\u00F3n\ de\ la\ entera\ secuencia\ de\ ADN\ que\ corresponde\ a\ la\ proporci\u00F3n\ de\ C's\ y\ G's.\n
comment5.params=adn\ codon
comment5.target=int\ numVecesCodon(java.lang.String,\ java.lang.String)
comment5.text=\n\ Obtener\ el\ n\u00FAmero\ de\ veces\ que\ aparece\ un\ cod\u00F3n\ en\ una\ secuencia\ de\ adn.\n\ \n\ @param\ adn\ Secuencia\ de\ adn\ a\ realizar\ la\ comprobaci\u00F3n.\n\ @param\ codon\ Cod\u00F3n\ a\ buscar\ para\ obtener\ el\ n\u00FAmero\ de\ veces\ que\ aparece.\n\ @return\ N\u00FAmero\ de\ veces\ que\ aparece\ el\ cod\u00F3n.\n
comment6.params=genes
comment6.target=int\ longitudMayorGen(edu.duke.StorageResource)
comment6.text=\n\ Obtener\ la\ longitud\ del\ mayor\ gen\ de\ entre\ un\ conjunto\ de\ genes.\n\ \n\ @param\ genes\ Conjunto\ de\ genes\ a\ obtener\ la\ longitud\ m\u00E1xima.\n\ @return\ Longitud\ m\u00E1xima\ de\ entre\ el\ conjunto\ de\ genes.\n
comment7.params=genes
comment7.target=void\ imprimirGenes(edu.duke.StorageResource)
comment7.text=\n\ Imprimir\ informaci\u00F3n\ de\ los\ genes.\ Aquellos\ con\ m\u00E1s\ de\ 60\ caracteres\ y\ cuya\ proporci\u00F3n\ CG\ es\n\ mayor\ que\ 0.35.\n\ \n\ @param\ genes\ Genes\ a\ partir\ de\ los\ cuales\ mostrar\ la\ informaci\u00F3n\n
comment8.params=
comment8.target=void\ probarBuscarProteina()
comment8.text=\n\ Funci\u00F3n\ encargada\ de\ probar\ la\ funci\u00F3n\ buscarProteina.\n
comment9.params=
comment9.target=void\ probarBuscarProteinas()
comment9.text=\n\ Funci\u00F3n\ encargada\ de\ probar\ la\ funci\u00F3n\ buscarProteinas.\n
numComments=10
