#BlueJ class context
comment0.params=maxLongClave
comment0.target=VigenereBreaker(int)
comment0.text=\n\ Constructor\n\ \n\ @param\ M\u00E1ximo\ tama\u00F1o\ de\ clave\ a\ probar\ para\ romper\ el\ cifrado.\n
comment1.params=
comment1.target=VigenereBreaker()
comment1.text=\n\ Constructor\n
comment10.params=encrypted\ dictionary\ alfa
comment10.target=java.lang.String\ breakForLanguage(java.lang.String,\ java.util.HashSet,\ java.lang.String)
comment10.text=\n\ Romper\ el\ cifrado\ de\ Vigenere\ con\ longitud\ de\ clave\ desconocida.\n\ \n\ @param\ encrypted\ Texto\ encryptado\ con\ cifrado\ de\ Vigenere.\n\ @param\ dictionary\ Diccionario\ de\ palabras\ del\ lenguaje\ del\ texto\ cifrado.\n\ @param\ alfa\ Alfabeto\ a\ usar.\n\ @return\ Texto\ desencriptado.\n
comment11.params=encrypted\ languages
comment11.target=java.lang.String\ breakForAllLanguages(java.lang.String,\ java.util.HashMap)
comment11.text=\n\ Romper\ el\ cifrado\ de\ Vigenere\ con\ longitud\ de\ clave\ e\ idioma\ desconocido.\n\ \n\ @param\ encrypted\ Texto\ encryptado\ con\ cifrado\ de\ Vigenere.\n\ @param\ languages\ Diccionarios\ de\ varios\ lenguajes.\n
comment12.params=longClave\ letraComun
comment12.target=void\ testTryKeyLength(int,\ char)
comment12.text=\n\ Probador\ del\ m\u00E9todo\ tryKeyLength.\n\ \n\ @param\ longClave\ Longitud\ de\ la\ clave\ usada.\n\ @param\ letraComun\ Letra\ m\u00E1s\ com\u00FAn\ del\ idioma\ del\ mensaje\ cifrado.\n
comment13.params=longClave\ letraComun
comment13.target=void\ testBreakVigenere(int,\ char)
comment13.text=\n\ Probador\ de\ la\ funci\u00F3n\ breakVigenere\n\ \n\ @param\ longClave\ Longitud\ de\ la\ clave\ usada.\n\ @param\ letraComun\ Letra\ m\u00E1s\ com\u00FAn\ del\ idioma\ del\ mensaje\ cifrado.\n
comment14.params=
comment14.target=void\ testBreakForLanguage()
comment14.text=\n\ Probador\ de\ la\ funci\u00F3n\ breakForLanguage\n
comment15.params=
comment15.target=void\ testBreakForAllLanguages()
comment15.text=\n\ Probador\ de\ la\ funci\u00F3n\ breakForAllLanguages\n
comment2.params=fr
comment2.target=java.util.HashSet\ readDictionary(edu.duke.FileResource)
comment2.text=\n\ Obtener\ un\ diccionario.\n\ \n\ @param\ fr\ Archivo\ con\ todas\ las\ palabras\ del\ diccionario\ de\ un\ idioma.\ Cada\ l\u00EDnea\ contiene\n\ una\ palabra.\n\ @return\ Conjunto\ de\ palabras\ del\ diccionario.\n
comment3.params=message\ dictionary
comment3.target=int\ countWords(java.lang.String,\ java.util.HashSet)
comment3.text=\n\ Contar\ el\ n\u00FAmero\ de\ palabras\ de\ un\ mensaje\ que\ se\ encuentran\ dentro\ de\ un\ diccionario.\n\ \n\ @param\ message\ Mensaje\ a\ contar\n\ @param\ dictionary\ Diccionario\ de\ palabras\ de\ un\ lenguaje.\n
comment4.params=frecLetras
comment4.target=char\ letraMasFrec(java.util.HashMap)
comment4.text=\n\ Obtener\ la\ letra\ m\u00E1s\ frecuente\ a\ partir\ de\ la\ frecuencia\ de\ letras\ en\ una\ tabla\ Map.\ Las\n\ frecuencias\ deben\ ser\ positivas.\n\ \n\ @param\ frecLetras\ Tabla\ Hash\ con\ la\ frecuencia\ por\ cada\ letra.\n\ @return\ Letra\ m\u00E1s\ frecuente\n
comment5.params=diccionario
comment5.target=java.util.HashMap\ contarLetrasDiccionario(java.util.HashSet)
comment5.text=\n\ Contar\ la\ frecuencia\ con\ que\ aparecen\ las\ letras\ dentro\ de\ un\ diccionario.\n\ \n\ @param\ diccionario\ Diccionario\ de\ un\ lenguaje.\n\ @return\ Tabla\ con\ la\ frecuencia\ por\ cada\ letra.\n
comment6.params=dictionary
comment6.target=char\ mostCommonCharIn(java.util.HashSet)
comment6.text=\n\ Obtener\ la\ letra\ m\u00E1s\ com\u00FAn\ que\ existe\ en\ un\ diccionario\ de\ un\ lenguaje.\n\ \n\ @param\ dictionary\ Diccionario\ de\ palabras\ del\ lenguaje.\n\ @return\ Letra\ m\u00E1s\ com\u00FAn\ del\ lenguaje.\n
comment7.params=message\ whichSlice\ totalSlices
comment7.target=java.lang.String\ sliceString(java.lang.String,\ int,\ int)
comment7.text=\n\ A\ partir\ de\ una\ cadena\ obtener\ otra\ cadena\ formada\ por\ los\ caracteres\ de\ una\ posici\u00F3n\ concreta\n\ whichSlice\ dentro\ de\ cada\ una\ de\ las\ ventanas\ de\ tama\u00F1o\ totalSlices.\ Obtener\ los\ caracteres\n\ cuya\ posici\u00F3n\ m\u00F3dulo\ totalSlices\ es\ whichSlice.\n\ \n\ @param\ whichSlice\ Posici\u00F3n\ dentro\ de\ la\ ventana\ de\ los\ caracteres\ a\ obtener.\n\ @param\ totalSlices\ Tama\u00F1o\ de\ la\ ventana.\n\ @return\ Cadena\ obtenida\ con\ los\ caracteres\ correctos\ dentro\ de\ cada\ ventana.\n
comment8.params=encrypted\ klength\ mostCommon\ alpha
comment8.target=int[]\ tryKeyLength(java.lang.String,\ int,\ char,\ java.lang.String)
comment8.text=\n\ Calcular\ la\ clave\ usada\ para\ encriptar\ un\ mensaje.\n\ \n\ @param\ klength\ Longitud\ de\ la\ clave.\n\ @param\ mostCommon\ Letra\ m\u00E1s\ com\u00FAn\ del\ lenguaje\ del\ mensaje.\n\ @param\ alpha\ Alfabeto\ del\ mensaje\ encriptado.\n\ @return\ Clave\ usada.\n
comment9.params=encriptado\ longClave\ letraComun\ alfa
comment9.target=java.lang.String\ breakVigenere(java.lang.String,\ int,\ char,\ java.lang.String)
comment9.text=\n\ Romper\ el\ cifrado\ de\ Vigenere\ con\ un\ tama\u00F1o\ de\ clave\ determinada.\n\ \n\ @param\ Mensaje\ encriptado.\n\ @param\ longClave\ Longitud\ de\ la\ clave\ usada.\n\ @param\ letraComun\ Letra\ m\u00E1s\ com\u00FAn\ del\ idioma\ del\ mensaje\ cifrado.\n\ @param\ alfa\ Alfabeto\ del\ mensaje.\n\ @return\ Mensaje\ desencriptado.\n
numComments=16
