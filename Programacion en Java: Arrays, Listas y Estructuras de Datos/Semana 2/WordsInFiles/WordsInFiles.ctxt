#BlueJ class context
comment0.params=palabra
comment0.target=java.lang.String\ eliminarSignos(java.lang.String)
comment0.text=\n\ Eliminar\ todos\ los\ caracteres\ que\ son\ signos\ de\ puntuaci\u00F3n\ al\ principio\ y\ al\ final.\n\ \n\ @param\ palabra\ Palabra\ a\ eliminar\ sus\ signos\n
comment1.params=
comment1.target=WordsInFiles()
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ WordsInFiles\n
comment2.params=f\ sinSigno
comment2.target=void\ addWordsFromFile(java.io.File,\ boolean)
comment2.text=\n\ A\u00F1ade\ todas\ las\ palabras\ de\ un\ archivo\ al\ diccionario\ indicando\ el\ nombre\ del\ archivo\n\ en\ la\ lista\ de\ archivos\ a\ la\ que\ mapea\ cada\ palabra.\ Si\ la\ palabra\ ya\ se\ encontraba\ en\n\ el\ diccionario\ simplemente\ a\u00F1ade\ el\ nombre\ del\ archivo\ a\ su\ lista\ mapeada\ en\ caso\ de\n\ no\ estar\ ya\ incluida.\n\ \n\ @param\ f\ Archivo\ de\ donde\ obtener\ las\ palabras.\n\ @param\ sinSignos\ Indica\ si\ se\ deben\ tener\ en\ cuenta\ los\ signos\ junto\ a\ una\ palabra.\ Si\ es\ true\n\ los\ signos\ se\ extraen\ y\ no\ se\ tienen\ en\ cuenta.\ Si\ es\ false\ los\ signos\ se\ dejan\ y\ se\ tienen\ \n\ en\ cuenta\ como\ parte\ de\ la\ palabra.\n
comment3.params=sinSigno
comment3.target=void\ buildWordFileMap(boolean)
comment3.text=\n\ Construye\ un\ diccionario\ de\ palabras\ mapeando\ cada\ palabra\ a\ los\ archivos\ donde\ aparece.\n\ Solicita\ al\ usuario\ una\ serie\ de\ archivos\ y\ construye\ el\ diccionario\ a\ partir\ de\ todas\ las\n\ palabras\ de\ estos\ archivos\ seleccionados.\n\ \n\ @param\ sinSignos\ Indica\ si\ se\ deben\ tener\ en\ cuenta\ los\ signos\ junto\ a\ una\ palabra.\ Si\ es\ true\n\ los\ signos\ se\ extraen\ y\ no\ se\ tienen\ en\ cuenta.\ Si\ es\ false\ los\ signos\ se\ dejan\ y\ se\ tienen\ \n\ en\ cuenta\ como\ parte\ de\ la\ palabra.\n
comment4.params=
comment4.target=int\ maxNumber()
comment4.text=\n\ Obtener\ el\ n\u00FAmero\ m\u00E1ximo\ de\ archivos\ en\ los\ que\ aparecido\ alguna\ palabra\ registrada\ en\ \n\ el\ diccionario\ construido\ anteriormente.\n\ \n\ @return\ N\u00FAmero\ m\u00E1ximo\ de\ archivos\ aparecidos\ por\ alguna\ palabra.\n
comment5.params=number
comment5.target=java.util.ArrayList\ wordsInNumFiles(int)
comment5.text=\n\ Obtener\ las\ palabras\ que\ aparecen\ en\ exactamente\ un\ n\u00FAmero\ determinado\ de\ archivos.\n\ \n\ @param\ number\ N\u00FAmero\ de\ archivos\ en\ los\ que\ debe\ aparecer\ alguna\ palabra.\n\ @return\ Lista\ de\ palabras\ que\ aparecen\ en\ el\ n\u00FAmero\ de\ archivos\ determinado.\n
comment6.params=word
comment6.target=void\ printFilesIn(java.lang.String)
comment6.text=\n\ Imprimir\ los\ archivos\ en\ los\ cuales\ una\ palabra\ ha\ aparecido.\ La\ informaci\u00F3n\ se\ obtiene\n\ a\ partir\ del\ diccionario\ ya\ calculado\ anteriormente.\n\ \n\ @param\ word\ Palabra\ a\ mostrar\ los\ archivos\ en\ los\ que\ ha\ aparecido.\n
comment7.params=mostrarTodo
comment7.target=void\ tester(boolean)
comment7.text=\n\ Probador\ de\ todas\ las\ funciones\ de\ esta\ clase\n\ \n\ @param\ mostrarTodo\ Si\ se\ desea\ mostrar\ todas\ las\ palabras\ con\ los\ archivos\ en\ los\ que\ \n\ aparecen.\n
comment8.params=numArchivos
comment8.target=void\ tester2(int)
comment8.text=\n\ Probador\ de\ todas\ las\ funciones\ de\ esta\ clase\n\ \n\ @param\ numArchivos\ N\u00FAmero\ de\ archivos\ en\ los\ que\ aparecen\ las\ palabras\ a\ considerar.\n
numComments=9
